{"version":3,"sources":["helpers.js","components/StorePicker.jsx","components/Header.jsx","components/Order.jsx","components/AddFishForm.jsx","components/EditFishForm.jsx","components/Login.jsx","base.js","components/Inventory.jsx","sample-fishes.js","components/Fish.jsx","components/App.jsx","components/NotFound.jsx","components/Router.jsx","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","console","log","props","history","push","className","onSubmit","this","type","required","placeholder","ref","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","qty","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","CSSTransition","TransitionGroup","component","id","name","price","onClick","deleteFishFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descriptionRef","imageRef","createFish","parseFloat","description","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","desc","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","authProvider","auth","FacebookAuthProvider","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.8ec03707.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'USD',\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, '-')\n    .replace(/[^\\w-]+/g, '')\n    .replace(/--+/g, '-')\n    .replace(/^-+/, '')\n    .replace(/-+$/, '');\n}\n\nexport function getFunName() {\n  const adjectives = [\n    'adorable',\n    'beautiful',\n    'clean',\n    'drab',\n    'elegant',\n    'fancy',\n    'glamorous',\n    'handsome',\n    'long',\n    'magnificent',\n    'old-fashioned',\n    'plain',\n    'quaint',\n    'sparkling',\n    'ugliest',\n    'unsightly',\n    'angry',\n    'bewildered',\n    'clumsy',\n    'defeated',\n    'embarrassed',\n    'fierce',\n    'grumpy',\n    'helpless',\n    'itchy',\n    'jealous',\n    'lazy',\n    'mysterious',\n    'nervous',\n    'obnoxious',\n    'panicky',\n    'repulsive',\n    'scary',\n    'thoughtless',\n    'uptight',\n    'worried',\n  ];\n\n  const nouns = [\n    'women',\n    'men',\n    'children',\n    'teeth',\n    'feet',\n    'people',\n    'leaves',\n    'mice',\n    'geese',\n    'halves',\n    'knives',\n    'wives',\n    'lives',\n    'elves',\n    'loaves',\n    'potatoes',\n    'tomatoes',\n    'cacti',\n    'foci',\n    'fungi',\n    'nuclei',\n    'syllabuses',\n    'analyses',\n    'diagnoses',\n    'oases',\n    'theses',\n    'crises',\n    'phenomena',\n    'criteria',\n    'data',\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getFunName } from '../helpers';\n\nclass StorePicker extends React.Component {\n  static propTypes = {\n    history: PropTypes.object,\n  };\n\n  // creating refs\n  myInput = React.createRef();\n\n  // create a property of the component to bind this to the component instance\n  // declare property and then make it an arrow function\n  goToStore = (event) => {\n    // 1. prevent default page refresh\n    event.preventDefault();\n    // 2. get the input value\n    const storeName = this.myInput.current.value;\n    console.log(storeName);\n    // 3. Change the page to /store/whatever-has-been-entered\n    // We use the props of the component push to push the state of it\n    this.props.history.push(`/store/${storeName}`);\n  };\n\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please select a store</h2>\n        <input type=\"text\" required placeholder=\"enter store name\" ref={this.myInput} defaultValue={getFunName()} />\n        <button type=\"submit\">Visit store →</button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import PropTypes from 'prop-types';Stateless functionnal component can be rendered with a regular js function io full blown react.\n\n// (destrutured props)\nconst Header = ({ tagline }) => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <span className=\"ofThe\">\n        <span className=\"of\">of</span>\n        <span className=\"the\">the</span>\n      </span>\n      day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired,\n};\n\n// class Header extends Component {\n//   render() {\n//     return (\n//       <header className=\"top\">\n//         <h1>\n//           Catch\n//           <span className=\"ofThe\">\n//             <span className=\"of\">of</span>\n//             <span className=\"the\">the</span>\n//           </span>\n//           day\n//         </h1>\n//         <h3 className=\"tagline\">\n//           <span>{this.props.tagline}</span>\n//         </h3>\n//       </header>\n//     );\n//   }\n// }\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { formatPrice } from '../helpers';\n\nclass Order extends Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func,\n  };\n\n  renderOrder = (key) => {\n    const fish = this.props.fishes[key];\n    const qty = this.props.order[key];\n    const isAvailable = fish && fish.status === 'available';\n\n    const transitionOptions = {\n      classNames: 'order',\n      key,\n      timeout: { enter: 500, exit: 500 },\n    };\n\n    // Make sure this fish is loaded before we continue\n    if (!fish) return null;\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>Sorry {fish ? fish.name : 'fish'} is no longer available</li>;\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition classNames=\"count\" key={qty} timeout={{ enter: 500, exit: 500 }}>\n                <span>{qty}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            <span id=\"kg\">kgs</span>\n          </span>\n          <strong id=\"fishName\">{fish.name}</strong>\n          {formatPrice(qty * fish.price)}\n          <button type=\"button\" onClick={() => this.props.deleteFishFromOrder(key)}>\n            &times;\n          </button>\n        </li>\n      </CSSTransition>\n    );\n  };\n\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const qty = this.props.order[key];\n      const isAvailable = fish && fish.status === 'available';\n      if (isAvailable) {\n        return prevTotal + qty * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <hr />\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total :<strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends Component {\n  static propTypes = {\n    addFish: PropTypes.func,\n  };\n\n  nameRef = React.createRef();\n\n  priceRef = React.createRef();\n\n  statusRef = React.createRef();\n\n  descriptionRef = React.createRef();\n\n  imageRef = React.createRef();\n\n  createFish = (event) => {\n    event.preventDefault();\n    // creating fish object to store values\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      description: this.descriptionRef.current.value,\n      image: this.imageRef.current.value,\n    };\n    this.props.addFish(fish);\n    // refresh the form\n    event.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n        <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea name=\"description\" ref={this.descriptionRef} placeholder=\"Description\" />\n        <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\n        <button type=\"submit\">+ Add Fish</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number,\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func,\n  };\n\n  handleChange = (event) => {\n    // console.log(event.currentTarget.value);\n    // update that fish\n    // take copy of current fish\n    const updatedFish = { ...this.props.fish, [event.currentTarget.name]: event.currentTarget.value };\n    // console.log(updatedFish);\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input type=\"text\" name=\"name\" onChange={this.handleChange} value={this.props.fish.name} />\n        <input type=\"text\" name=\"price\" onChange={this.handleChange} value={this.props.fish.price} />\n        <select type=\"text\" name=\"status\" onChange={this.handleChange} value={this.props.fish.status}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea type=\"text\" name=\"desc\" onChange={this.handleChange} value={this.props.fish.desc} />\n        <input type=\"text\" name=\"image\" onChange={this.handleChange} value={this.props.fish.image} />\n        <button type=\"button\" onClick={() => this.props.deleteFish(this.props.index)}>\n          Remove Fish\n        </button>\n      </div>\n    );\n  }\n}\nexport default EditFishForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = (props) => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage store inventory</p>\n    <button type=\"button\" className=\"facebook\" onClick={() => props.authenticate('Facebook')}>\n      Log in with Facebook\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDL0JKeDGIahv0Q05nKE4irVTx_v5VsZBY',\n  authDomain: 'catch-of-the-day-4b3b2.firebaseapp.com',\n  databaseURL: 'https://catch-of-the-day-4b3b2.firebaseio.com',\n};\n// Initialize Firebase\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst base = Rebase.createClass(firebaseApp.database());\n\nexport { firebaseApp };\nexport default base;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    loadSampleFishes: PropTypes.func,\n    addFish: PropTypes.func,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n  };\n\n  state = {\n    uid: null,\n    owner: null,\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async (authData) => {\n    // 1. look for the current store in firebase DB\n    const store = await base.fetch(this.props.storeId, { context: this });\n    // 2. Claim it if there is no owner\n    if (!store.owner) {\n      // save it as our owner\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid,\n      });\n    }\n    // 3. set the state to inventory component to reflect current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid,\n    });\n  };\n\n  authenticate = () => {\n    // const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    const authProvider = new firebase.auth.FacebookAuthProvider();\n    // console.log(provider);\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\n  };\n\n  // logout = async () => {\n  //   console.log('loggin out');\n  //   await firebase.auth().signOut();\n  //   this.setState({ uid: null });\n  // };\n\n  logout = async () => {\n    await firebaseApp.auth().signOut();\n    this.setState({ uid: null });\n  };\n\n  render() {\n    const logout = (\n      <button type=\"button\" onClick={this.logout}>\n        Log out!\n      </button>\n    );\n    // check if they are logged inventory\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n    // check if they are owner of the store.owner\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>You are not the store owner</p>\n          {logout}\n        </div>\n      );\n    }\n    // 3. They must be the owner, just render the inventory\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map((key) => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button type=\"button\" onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: 'Pacific Halibut',\n    image: '/images/hali.jpg',\n    desc: 'Everyone’s favorite white fish. We will cut it to the size you need and ship it.',\n    price: 1724,\n    status: 'available',\n  },\n\n  fish2: {\n    name: 'Lobster',\n    image: '/images/lobster.jpg',\n    desc: 'These tender, mouth-watering beauties are a fantastic hit at any dinner party.',\n    price: 3200,\n    status: 'available',\n  },\n\n  fish3: {\n    name: 'Sea Scallops',\n    image: '/images/scallops.jpg',\n    desc: 'Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound',\n    price: 1684,\n    status: 'unavailable',\n  },\n\n  fish4: {\n    name: 'Mahi Mahi',\n    image: '/images/mahi.jpg',\n    desc: 'Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. ',\n    price: 1129,\n    status: 'available',\n  },\n\n  fish5: {\n    name: 'King Crab',\n    image: '/images/crab.jpg',\n    desc: 'Crack these open and enjoy them plain or with one of our cocktail sauces',\n    price: 4234,\n    status: 'available',\n  },\n\n  fish6: {\n    name: 'Atlantic Salmon',\n    image: '/images/salmon.jpg',\n    desc: 'This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!',\n    price: 1453,\n    status: 'available',\n  },\n\n  fish7: {\n    name: 'Oysters',\n    image: '/images/oysters.jpg',\n    desc: 'A soft plump oyster with a sweet salty flavor and a clean finish.',\n    price: 2543,\n    status: 'available',\n  },\n\n  fish8: {\n    name: 'Mussels',\n    image: '/images/mussels.jpg',\n    desc: 'The best mussels from the Pacific Northwest with a full-flavored and complex taste.',\n    price: 425,\n    status: 'available',\n  },\n\n  fish9: {\n    name: 'Jumbo Prawns',\n    image: '/images/prawns.jpg',\n    desc: 'With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.',\n    price: 2250,\n    status: 'available',\n  },\n};\n\nexport default fishes;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nclass Fish extends Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number,\n    }),\n    addToOrder: PropTypes.func,\n  };\n\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === 'available';\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button type=\"button\" disabled={!isAvailable} onClick={() => this.props.addToOrder(this.props.index)}>\n          {isAvailable ? 'Add to order' : 'Sold Out'}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n\nclass App extends Component {\n  state = {\n    fishes: {},\n    order: {},\n  };\n\n  static propTypes = {\n    match: PropTypes.object,\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    // first reinstate local storage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    console.log(localStorageRef);\n    if (localStorageRef) {\n      this.setState({\n        order: JSON.parse(localStorageRef),\n      });\n    }\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: 'fishes',\n    });\n  }\n\n  componentDidUpdate() {\n    // console.log(this.state.order);\n    // setItem take a key value pair. here key == storeName & value == the order state\n    localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n  }\n\n  // clean memory of firebase when we lea a store\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  // custom function to update state ==> add fish in inventory component\n  addFish = (fish) => {\n    // to update a state\n    // 1. take a copy of the existing state\n    const fishes = { ...this.state.fishes };\n    // 2. Add our new fish to that fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n    // 3. set new fishes object to state\n    this.setState({\n      fishes,\n    });\n  };\n\n  updateFish = (key, updateFish) => {\n    // 1. take a copy of the existing state\n    const fishes = { ...this.state.fishes };\n    // 2. update state\n    fishes[key] = updateFish;\n    // 3. set that change into state\n    this.setState({ fishes });\n  };\n\n  deleteFish = (key) => {\n    // 1. take a copy of the existing state\n    const fishes = { ...this.state.fishes };\n    // 2. update state, we set the fishes to null in order for firebase to be also updates\n    fishes[key] = null;\n    // 3. set that change into state\n    this.setState({ fishes });\n  };\n\n  // another custom function to update state (here load fishes in inventory component)\n  loadSampleFishes = () => {\n    this.setState({\n      fishes: sampleFishes,\n    });\n  };\n\n  addToOrder = (key) => {\n    // take copy of state\n    const order = { ...this.state.order };\n    // either add or update the qty in our order\n    order[key] = order[key] + 1 || 1;\n    // call setState to update our state object\n    this.setState({\n      order,\n    });\n  };\n\n  deleteFishFromOrder = (key) => {\n    // take copy of state\n    const order = { ...this.state.order };\n    // either remove or update the qty in our order\n    delete order[key];\n    // call setState to update our state object\n    this.setState({\n      order,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh seafood market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map((key) => (\n              <Fish key={key} index={key} details={this.state.fishes[key]} addToOrder={this.addToOrder} />\n            ))}\n          </ul>\n        </div>\n        <Order fishes={this.state.fishes} order={this.state.order} deleteFishFromOrder={this.deleteFishFromOrder} />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\n// Stateless functionnal component can be rendered with a regular js function io full blown react.\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found!!!!</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      {/* fallback route */}\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './css/style.css';\nimport Router from './components/Router.jsx';\n\nrender(<Router />, document.querySelector('#main'));\n"],"sourceRoot":""}